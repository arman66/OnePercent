{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { userLoginReducer, userRegisterReducer } from './reducers/userReducers';\nconst reducer = combineReducers({\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer\n});\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst initialState = {\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/armando/Documents/Projects/AtomicHabits/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","userLoginReducer","userRegisterReducer","reducer","userLogin","userRegister","userInfoFromStorage","localStorage","getItem","JSON","parse","initialState","userInfo","middleware","store"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,EAAsCC,eAAtC,QAA4D,OAA5D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AAGA,SAAOC,gBAAP,EAAyBC,mBAAzB,QAAmD,yBAAnD;AAMA,MAAMC,OAAO,GAAGN,eAAe,CAAC;AAC5BO,EAAAA,SAAS,EAAEH,gBADiB;AAE5BI,EAAAA,YAAY,EAAEH;AAFc,CAAD,CAA/B;AAMA,MAAMI,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GAExB,IAFJ;AAIA,MAAMG,YAAY,GAAC;AACfP,EAAAA,SAAS,EAAE;AAACQ,IAAAA,QAAQ,EAAEN;AAAX;AADI,CAAnB;AAIA,MAAMO,UAAU,GAAE,CAACd,KAAD,CAAlB;AAEA,MAAMe,KAAK,GAAGlB,WAAW,CAEzBO,OAFyB,EAIzBQ,YAJyB,EAMzBX,mBAAmB,CAACF,eAAe,CAAC,GAAGe,UAAJ,CAAhB,CANM,CAAzB;AAUA,eAAeC,KAAf","sourcesContent":["import {createStore, combineReducers, applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk'\nimport {composeWithDevTools} from 'redux-devtools-extension'\n\n\nimport{userLoginReducer, userRegisterReducer} from './reducers/userReducers'\n\n\n\n\n\nconst reducer = combineReducers({\n    userLogin: userLoginReducer,\n    userRegister: userRegisterReducer\n})\n\n\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null\n\nconst initialState={\n    userLogin: {userInfo: userInfoFromStorage}\n}\n\nconst middleware= [thunk]\n\nconst store = createStore(\n\nreducer,\n\ninitialState,\n\ncomposeWithDevTools(applyMiddleware(...middleware))\n\n)\n\nexport default store"]},"metadata":{},"sourceType":"module"}