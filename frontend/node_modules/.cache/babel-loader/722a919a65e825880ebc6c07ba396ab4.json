{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { userLoginReducer, userRegisterReducer } from './reducers/userReducers';\nimport { habitListReducer, habitCreateReducer, habitUpdateReducer } from './reducers/habitReducers';\nconst reducer = combineReducers({\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  habitList: habitListReducer,\n  habitCreate: habitCreateReducer,\n  habitUpdate: habitUpdateReducer\n});\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst initialState = {\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/armando/Documents/Projects/AtomicHabits/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","userLoginReducer","userRegisterReducer","habitListReducer","habitCreateReducer","habitUpdateReducer","reducer","userLogin","userRegister","habitList","habitCreate","habitUpdate","userInfoFromStorage","localStorage","getItem","JSON","parse","initialState","userInfo","middleware","store"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,EAAsCC,eAAtC,QAA4D,OAA5D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AAGA,SAAOC,gBAAP,EAAyBC,mBAAzB,QAAmD,yBAAnD;AACA,SAASC,gBAAT,EAA0BC,kBAA1B,EAA6CC,kBAA7C,QAAuE,0BAAvE;AAMA,MAAMC,OAAO,GAAGT,eAAe,CAAC;AAC5BU,EAAAA,SAAS,EAAEN,gBADiB;AAE5BO,EAAAA,YAAY,EAAEN,mBAFc;AAG5BO,EAAAA,SAAS,EAAEN,gBAHiB;AAI5BO,EAAAA,WAAW,EAACN,kBAJgB;AAK5BO,EAAAA,WAAW,EAAEN;AALe,CAAD,CAA/B;AASA,MAAMO,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GAExB,IAFJ;AAIA,MAAMG,YAAY,GAAC;AACfV,EAAAA,SAAS,EAAE;AAACW,IAAAA,QAAQ,EAAEN;AAAX;AADI,CAAnB;AAIA,MAAMO,UAAU,GAAE,CAACpB,KAAD,CAAlB;AAEA,MAAMqB,KAAK,GAAGxB,WAAW,CAEzBU,OAFyB,EAGzBW,YAHyB,EAIzBjB,mBAAmB,CAACF,eAAe,CAAC,GAAGqB,UAAJ,CAAhB,CAJM,CAAzB;AAQA,eAAeC,KAAf","sourcesContent":["import {createStore, combineReducers, applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk'\nimport {composeWithDevTools} from 'redux-devtools-extension'\n\n\nimport{userLoginReducer, userRegisterReducer} from './reducers/userReducers'\nimport { habitListReducer,habitCreateReducer,habitUpdateReducer } from './reducers/habitReducers'\n\n\n\n\n\nconst reducer = combineReducers({\n    userLogin: userLoginReducer,\n    userRegister: userRegisterReducer,\n    habitList: habitListReducer,\n    habitCreate:habitCreateReducer,\n    habitUpdate: habitUpdateReducer\n})\n\n\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null\n\nconst initialState={\n    userLogin: {userInfo: userInfoFromStorage}\n}\n\nconst middleware= [thunk]\n\nconst store = createStore(\n\nreducer,\ninitialState,\ncomposeWithDevTools(applyMiddleware(...middleware))\n\n)\n\nexport default store"]},"metadata":{},"sourceType":"module"}