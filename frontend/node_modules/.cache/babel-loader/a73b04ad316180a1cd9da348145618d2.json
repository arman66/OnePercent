{"ast":null,"code":"import axios from 'axios';\nimport { HABIT_LIST_FAIL, HABIT_LIST_REQUEST, HABIT_LIST_SUCCESS, HABIT_UPDATE_REQUEST, HABIT_UPDATE_FAIL, HABIT_UPDATE_RESET, HABIT_UPDATE_SUCCESS, HABIT_CREATE_REQUEST, HABIT_CREATE_FAIL, HABIT_CREATE_SUCCESS, HABIT_CREATE_RESET } from '../constants/habitConstants';\nimport { logout } from './userActions';\nexport const listHabits = () => async dispatch => {\n  try {\n    dispatch({\n      type: HABIT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/habits');\n    dispatch({\n      type: HABIT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: HABIT_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const createHabit = (name, progress, frequency, category) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: HABIT_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/habits`, config);\n    dispatch({\n      type: HABIT_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: HABIT_CREATE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateHabit = habit => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: HABIT_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`api/habits/${habit._id}`, habit, config);\n    dispatch({\n      type: HABIT_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: HABIT_UPDATE_FAIL,\n      payload: 'errror updating'\n    });\n  }\n};","map":{"version":3,"sources":["/Users/armando/Documents/Projects/AtomicHabits/frontend/src/actions/habitActions.js"],"names":["axios","HABIT_LIST_FAIL","HABIT_LIST_REQUEST","HABIT_LIST_SUCCESS","HABIT_UPDATE_REQUEST","HABIT_UPDATE_FAIL","HABIT_UPDATE_RESET","HABIT_UPDATE_SUCCESS","HABIT_CREATE_REQUEST","HABIT_CREATE_FAIL","HABIT_CREATE_SUCCESS","HABIT_CREATE_RESET","logout","listHabits","dispatch","type","data","get","payload","error","response","message","createHabit","name","progress","frequency","category","getState","userLogin","userInfo","config","headers","Authorization","token","post","updateHabit","habit","put","_id"],"mappings":"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","sourcesContent":["import axios from'axios'\nimport {HABIT_LIST_FAIL,HABIT_LIST_REQUEST,HABIT_LIST_SUCCESS,HABIT_UPDATE_REQUEST, HABIT_UPDATE_FAIL, HABIT_UPDATE_RESET, HABIT_UPDATE_SUCCESS,HABIT_CREATE_REQUEST,HABIT_CREATE_FAIL,HABIT_CREATE_SUCCESS, HABIT_CREATE_RESET} from '../constants/habitConstants'\n\n\nimport { logout } from './userActions'\n\nexport const listHabits=()=> async(dispatch)=>{\n\n    try {\n        dispatch({type: HABIT_LIST_REQUEST})\n        const{data} = await axios.get('/api/habits')\n\n        dispatch({\n            type:HABIT_LIST_SUCCESS,\n            payload:data\n        })\n    } catch (error) {\n        dispatch({type: HABIT_LIST_FAIL, payload: error.response && error.response.data.message? error.response.data.message : error.message})\n    }\n\n}\n\nexport const createHabit= (name,progress,frequency,category)=> async(dispatch, getState)=>{\n    try {\n        dispatch({\n            type: HABIT_CREATE_REQUEST\n        })\n        const {\n            userLogin:{userInfo},\n        } = getState()\n\n        const config= {\n            headers:{\n                Authorization: `Bearer ${userInfo.token}`,\n            }\n        }\n      \n        const {data} = await axios.post(`/api/habits`, config)\n     \n        dispatch({\n            \n            type: HABIT_CREATE_SUCCESS,\n            payload: data,\n        })\n        \n        \n    } catch (error) {\n        const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: HABIT_CREATE_FAIL,\n      payload: message,\n    })\n    }\n}\n\n\nexport const updateHabit =(habit)=> async(dispatch, getState)=>{\n\ntry {\n    dispatch({\n        type: HABIT_UPDATE_REQUEST,\n    })\n\n    const {\n        userLogin:{userInfo},\n\n    }= getState()\n\n    const config={\n        headers:{\n            'Content-Type':'application/json',\n            Authorization:`Bearer ${userInfo.token}`,\n\n        },\n    }\n    const {data}= await axios.put(\n        `api/habits/${habit._id}`,\n        habit,\n        config,\n    )\n\n    dispatch({\n        type: HABIT_UPDATE_SUCCESS,\n        payload: data,\n\n    })\n\n\n} catch (error) {\n    dispatch({\n        type: HABIT_UPDATE_FAIL,\n        payload:'errror updating'\n    })\n}\n\n}"]},"metadata":{},"sourceType":"module"}